<?xml version='1.0'?>
<rules xmlns="http://www.loc.gov/bf2marc"
       xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
       xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
       xmlns:bf="http://id.loc.gov/ontologies/bibframe/"
       xmlns:bflc="http://id.loc.gov/ontologies/bflc/"
       xmlns:madsrdf="http://www.loc.gov/mads/rdf/v1#"
       xmlns:marc="http://www.loc.gov/MARC21/slim"
       xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

  <df tag="300">
    <context xpath="bf:Instance/bf:extent/bf:Extent">
      <ind1 default=" "/>
      <ind2 default=" "/>
      <sf code="3" chopPunct="true" repeatable="false">
        <select xpath="bflc:appliesTo/bflc:AppliesTo/rdfs:label"/>
      </sf>
      <sf code="a" chopPunct="true"><select xpath="rdfs:label"/></sf>
      <sf code="b" chopPunct="true" repeatable="false">
        <select xpath="../../bf:note/bf:Note[bf:noteType='Physical details']/rdfs:label"/>
      </sf>
      <sf code="c" chopPunct="true"><select xpath="../../bf:dimensions"/></sf>
      <sf code="e" chopPunct="true" repeatable="false">
        <select xpath="../../bf:note/bf:Note[translate(bf:noteType,$upper,$lower)='accompanying material']/rdfs:label"/>
      </sf>
    </context>
  </df>

  <!-- 306 -->
  <switch>
    <case test="bf:Instance/bf:duration[@rdf:datatype='http://www.w3.org/2001/XMLSchema#duration']">
      <df tag="306">
        <ind1 default=" "/>
        <ind2 default=" "/>
        <sf code="a" chopPunct="true">
          <select xpath="bf:Instance/bf:duration[@rdf:datatype='http://www.w3.org/2001/XMLSchema#duration']"/>
        </sf>
      </df>
    </case>
  </switch>

  <!-- 310/321 -->
  <df tag="$vFreqTag">
    <context xpath="bf:Instance/bf:frequency/bf:Frequency">
      <var name="vFreqTag">
        <switch>
          <case test="translate(bf:note/bf:Note/rdfs:label,$upper,$lower)='former frequency'">321</case>
          <case test="default">310</case>
        </switch>
      </var>
      <ind1 default=" "/>
      <ind2 default=" "/>
      <sf code="a" chopPunct="true" repeatable="false">
        <select xpath="rdfs:label"/>
      </sf>
      <sf code="b" chopPunct="true" repeatable="false">
        <select xpath="bf:date"/>
      </sf>
      <sf code="2" chopPunct="true" repeatable="false">
        <select xpath="bf:source/bf:Source/bf:code"/>
      </sf>
      <sf code="0">
        <select xpath="@rdf:about"/>
      </sf>
      <sf code="0">
        <select xpath="bf:identifiedBy/bf:Identifier">
          <transform>
            <xsl:variable name="vIdType">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
              </xsl:call-template>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="$vIdType != ''">
                <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
              </xsl:when>
              <xsl:otherwise><xsl:value-of select="rdf:value"/></xsl:otherwise>
            </xsl:choose>
          </transform>
        </select>
      </sf>
    </context>
  </df>

  <df tag="336" lang-xpath="rdfs:label">
    <context xpath="bf:Work/bf:content/*[local-name()='Content' or
                                                 rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Content'] or
                                                 local-name()='Authority' or
                                                 rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Authority']]">
      <ind1 default=" "/>
      <ind2 default=" "/>
      <sf code="3" repeatable="false">
        <select xpath="bflc:appliesTo/bflc:AppliesTo/rdfs:label"/>
      </sf>
      <sf code="a" chopPunct="true">
        <switch>
          <case test="madsrdf:authoritativeLabel"><select xpath="madsrdf:authoritativeLabel"/></case>
          <case test="default"><select xpath="rdfs:label"/></case>
        </switch>
      </sf>
      <switch>
        <case test="*[local-name()='code']">
          <sf code="b"><transform><xsl:value-of select="*[local-name()='code']"/></transform></sf>
        </case>
        <case test="@rdf:about">
          <sf code="b">
            <switch>
              <case test="contains(@rdf:about,'id.loc.gov')">
                <transform>
                  <xsl:call-template name="tUriCode">
                    <xsl:with-param name="pUri" select="@rdf:about"/>
                  </xsl:call-template>
                </transform>
              </case>
              <case test="default"><transform><xsl:value-of select="@rdf:about"/></transform></case>
            </switch>
          </sf>
        </case>
      </switch>
      <sf code="0">
        <select xpath="@rdf:about"/>
      </sf>
      <sf code="0">
        <select xpath="bf:identifiedBy/bf:Identifier">
          <transform>
            <xsl:variable name="vIdType">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
              </xsl:call-template>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="$vIdType != ''">
                <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
              </xsl:when>
              <xsl:otherwise><xsl:value-of select="rdf:value"/></xsl:otherwise>
            </xsl:choose>
          </transform>
        </select>
      </sf>
      <sf code="2" chopPunct="true" repeatable="false">
        <select xpath="bf:source/bf:Source/bf:code"/>
      </sf>
    </context>
  </df>

  <df tag="337" lang-xpath="rdfs:label">
    <context xpath="bf:Instance/bf:media/*[local-name()='Media' or
                                                   rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Media'] or
                                                   local-name()='Authority' or
                                                   rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Authority']]">
      <ind1 default=" "/>
      <ind2 default=" "/>
      <sf code="3" chopPunct="true" repeatable="false">
        <select xpath="bflc:appliesTo/bflc:AppliesTo/rdfs:label"/>
      </sf>
      <sf code="a" chopPunct="true">
        <switch>
          <case test="madsrdf:authoritativeLabel"><select xpath="madsrdf:authoritativeLabel"/></case>
          <case test="default"><select xpath="rdfs:label"/></case>
        </switch>
      </sf>
      <switch>
        <case test="*[local-name()='code']">
          <sf code="b"><transform><xsl:value-of select="*[local-name()='code']"/></transform></sf>
        </case>
        <case test="@rdf:about">
          <sf code="b">
            <switch>
              <case test="contains(@rdf:about,'id.loc.gov')">
                <transform>
                  <xsl:call-template name="tUriCode">
                    <xsl:with-param name="pUri" select="@rdf:about"/>
                  </xsl:call-template>
                </transform>
              </case>
              <case test="default"><transform><xsl:value-of select="@rdf:about"/></transform></case>
            </switch>
          </sf>
        </case>
      </switch>
      <sf code="0">
        <select xpath="@rdf:about"/>
      </sf>
      <sf code="0">
        <select xpath="bf:identifiedBy/bf:Identifier">
          <transform>
            <xsl:variable name="vSource">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
              </xsl:call-template>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="$vSource != ''">
                <xsl:value-of select="concat('(',$vSource,')',rdf:value)"/>
              </xsl:when>
              <xsl:otherwise><xsl:value-of select="rdf:value"/></xsl:otherwise>
            </xsl:choose>
          </transform>
        </select>
      </sf>
      <sf code="2" chopPunct="true" repeatable="false">
        <select xpath="bf:source/bf:Source/bf:code"/>
      </sf>
    </context>
  </df>

  <df tag="338" lang-xpath="rdfs:label">
    <context xpath="bf:Instance/bf:carrier/*[local-name()='Carrier' or
                                                     rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Carrier'] or
                                                     local-name()='Authority' or
                                                     rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Authority']]">
      <ind1 default=" "/>
      <ind2 default=" "/>
      <sf code="3" chopPunct="true" repeatable="false">
        <select xpath="bflc:appliesTo/bflc:AppliesTo/rdfs:label"/>
      </sf>
      <sf code="a" chopPunct="true">
        <switch>
          <case test="madsrdf:authoritativeLabel"><select xpath="madsrdf:authoritativeLabel"/></case>
          <case test="default"><select xpath="rdfs:label"/></case>
        </switch>
      </sf>
      <switch>
        <case test="*[local-name()='code']">
          <sf code="b"><transform><xsl:value-of select="*[local-name()='code']"/></transform></sf>
        </case>
        <case test="@rdf:about">
          <sf code="b">
            <switch>
              <case test="contains(@rdf:about,'id.loc.gov')">
                <transform>
                  <xsl:call-template name="tUriCode">
                    <xsl:with-param name="pUri" select="@rdf:about"/>
                  </xsl:call-template>
                </transform>
              </case>
              <case test="default"><transform><xsl:value-of select="@rdf:about"/></transform></case>
            </switch>
          </sf>
        </case>
      </switch>
      <sf code="0">
        <select xpath="@rdf:about"/>
      </sf>
      <sf code="0">
        <select xpath="bf:identifiedBy/bf:Identifier">
          <transform>
            <xsl:variable name="vSource">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
              </xsl:call-template>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="$vSource != ''">
                <xsl:value-of select="concat('(',$vSource,')',rdf:value)"/>
              </xsl:when>
              <xsl:otherwise><xsl:value-of select="rdf:value"/></xsl:otherwise>
            </xsl:choose>
          </transform>
        </select>
      </sf>
      <sf code="2" chopPunct="true" repeatable="false">
        <select xpath="bf:source/bf:Source/bf:code"/>
      </sf>
    </context>
  </df>

  <df tag="340" lang-xpath="rdfs:label">
    <context xpath="bf:Instance/bf:baseMaterial/bf:BaseMaterial |
                    bf:Instance/bf:appliedMaterial/bf:AppliedMaterial |
                    bf:Instance/bf:productionMethod/bf:ProductionMethod |
                    bf:Instance/bf:mount/bf:Mount |
                    bf:Instance/bf:reductionRatio/bf:ReductionRatio |
                    bf:Work/bf:colorContent/bf:ColorContent |
                    bf:Instance/bf:generation/bf:Generation |
                    bf:Instance/bf:layout/bf:Layout |
                    bf:Instance/bf:bookFormat/bf:BookFormat |
                    bf:Instance/bf:fontSize/bf:FontSize |
                    bf:Instance/bf:polarity/bf:Polarity">
      <ind1 default=" "/>
      <ind2 default=" "/>
      <switch>
        <case test="local-name()='BaseMaterial'">
          <sf code="a" chopPunct="true"><select xpath="rdfs:label"/></sf>
        </case>
        <case test="local-name()='AppliedMaterial'">
          <sf code="c" chopPunct="true"><select xpath="rdfs:label"/></sf>
        </case>
        <case test="local-name()='ProductionMethod'">
          <sf code="d" chopPunct="true"><select xpath="rdfs:label"/></sf>
        </case>
        <case test="local-name()='Mount'">
          <sf code="e" chopPunct="true"><select xpath="rdfs:label"/></sf>
        </case>
        <case test="local-name()='reductionRatio'">
          <sf code="f" chopPunct="true"><select xpath="rdfs:label"/></sf>
        </case>
        <case test="local-name()='ColorContent'">
          <sf code="g" chopPunct="true"><select xpath="rdfs:label"/></sf>
        </case>
        <case test="local-name()='Generation'">
          <sf code="j" chopPunct="true"><select xpath="rdfs:label"/></sf>
        </case>
        <case test="local-name()='Layout'">
          <sf code="k" chopPunct="true"><select xpath="rdfs:label"/></sf>
        </case>
        <case test="local-name()='BookFormat'">
          <sf code="m" chopPunct="true"><select xpath="rdfs:label"/></sf>
        </case>
        <case test="local-name()='FontSize'">
          <sf code="n" chopPunct="true"><select xpath="rdfs:label"/></sf>
        </case>
        <case test="local-name()='Polarity'">
          <sf code="o" chopPunct="true"><select xpath="rdfs:label"/></sf>
        </case>
      </switch>
      <sf code="0">
        <select xpath="@rdf:about"/>
      </sf>
      <sf code="0">
        <select xpath="bf:identifiedBy/bf:Identifier">
          <transform>
            <xsl:variable name="vSource">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
              </xsl:call-template>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="$vSource != ''">
                <xsl:value-of select="concat('(',$vSource,')',rdf:value)"/>
              </xsl:when>
              <xsl:otherwise><xsl:value-of select="rdf:value"/></xsl:otherwise>
            </xsl:choose>
          </transform>
        </select>
      </sf>
      <sf code="2" chopPunct="true" repeatable="false">
        <select xpath="bf:source/bf:Source/bf:code"/>
      </sf>
    </context>
  </df>

  <df tag="344" lang-xpath="rdfs:label">
    <context xpath="bf:Instance/bf:soundCharacteristic/bf:RecordingMethod |
                    bf:Instance/bf:soundCharacteristic/bf:RecordingMedium |
                    bf:Instance/bf:soundCharacteristic/bf:PlayingSpeed |
                    bf:Instance/bf:soundCharacteristic/bf:GrooveCharacteristic |
                    bf:Instance/bf:soundCharacteristic/bf:TrackConfig |
                    bf:Instance/bf:soundCharacteristic/bf:TapeConfig |
                    bf:Instance/bf:soundCharacteristic/bf:PlaybackChannels |
                    bf:Instance/bf:soundCharacteristic/bf:PlaybackCharacteristic">
      <ind1 default=" "/>
      <ind2 default=" "/>
      <sf code="3" chopPunct="true" repeatable="false">
        <select xpath="bflc:appliesTo/bflc:AppliesTo/rdfs:label"/>
      </sf>
      <switch>
        <case test="local-name()='RecordingMethod'">
          <sf code="a" chopPunct="true"><select xpath="rdfs:label"/></sf>
        </case>
        <case test="local-name()='RecordingMedium'">
          <sf code="b" chopPunct="true"><select xpath="rdfs:label"/></sf>
        </case>
        <case test="local-name()='PlayingSpeed'">
          <sf code="c" chopPunct="true"><select xpath="rdfs:label"/></sf>
        </case>
        <case test="local-name()='GrooveCharacteristic'">
          <sf code="d" chopPunct="true"><select xpath="rdfs:label"/></sf>
        </case>
        <case test="local-name()='TrackConfig'">
          <sf code="e" chopPunct="true"><select xpath="rdfs:label"/></sf>
        </case>
        <case test="local-name()='TapeConfig'">
          <sf code="f" chopPunct="true"><select xpath="rdfs:label"/></sf>
        </case>
        <case test="local-name()='PlaybackChannels'">
          <sf code="g" chopPunct="true"><select xpath="rdfs:label"/></sf>
        </case>
        <case test="local-name()='PlaybackCharacteristic'">
          <sf code="h" chopPunct="true"><select xpath="rdfs:label"/></sf>
        </case>
      </switch>
      <sf code="0">
        <select xpath="@rdf:about"/>
      </sf>
      <sf code="0">
        <select xpath="bf:identifiedBy/bf:Identifier">
          <transform>
            <xsl:variable name="vSource">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
              </xsl:call-template>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="$vSource != ''">
                <xsl:value-of select="concat('(',$vSource,')',rdf:value)"/>
              </xsl:when>
              <xsl:otherwise><xsl:value-of select="rdf:value"/></xsl:otherwise>
            </xsl:choose>
          </transform>
        </select>
      </sf>
      <sf code="2" chopPunct="true" repeatable="false">
        <select xpath="bf:source/bf:Source/bf:code"/>
      </sf>
    </context>
  </df>

  <df tag="345" lang-xpath="rdfs:label">
    <context xpath="bf:Instance/bf:projectionCharacteristic/bf:PresentationFormat |
                    bf:Instance/bf:projectionCharacteristic/bf:ProjectionSpeed">
      <ind1 default=" "/>
      <ind2 default=" "/>
      <sf code="3" chopPunct="true" repeatable="false">
        <select xpath="bflc:appliesTo/bflc:AppliesTo/rdfs:label"/>
      </sf>
      <switch>
        <case test="local-name()='PresentationFormat'">
          <sf code="a" chopPunct="true"><select xpath="rdfs:label"/></sf>
        </case>
        <case test="local-name()='ProjectionSpeed'">
          <sf code="b" chopPunct="true"><select xpath="rdfs:label"/></sf>
        </case>
      </switch>
      <sf code="0">
        <select xpath="@rdf:about"/>
      </sf>
      <sf code="0">
        <select xpath="bf:identifiedBy/bf:Identifier">
          <transform>
            <xsl:variable name="vSource">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
              </xsl:call-template>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="$vSource != ''">
                <xsl:value-of select="concat('(',$vSource,')',rdf:value)"/>
              </xsl:when>
              <xsl:otherwise><xsl:value-of select="rdf:value"/></xsl:otherwise>
            </xsl:choose>
          </transform>
        </select>
      </sf>
      <sf code="2" chopPunct="true" repeatable="false">
        <select xpath="bf:source/bf:Source/bf:code"/>
      </sf>
    </context>
  </df>

  <df tag="345" lang-xpath="rdfs:label">
    <context xpath="bf:Work/bf:aspectRatio/bf:AspectRatio[rdfs:label]">
      <ind1 default=" "/>
      <ind2 default=" "/>
      <sf code="3" chopPunct="true" repeatable="false">
        <select xpath="bflc:appliesTo/bflc:AppliesTo/rdfs:label"/>
      </sf>
      <sf code="d" chopPunct="true"><select xpath="rdfs:label"/></sf>
      <sf code="0">
        <select xpath="@rdf:about"/>
      </sf>
      <sf code="0">
        <select xpath="bf:identifiedBy/bf:Identifier">
          <transform>
            <xsl:variable name="vSource">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
              </xsl:call-template>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="$vSource != ''">
                <xsl:value-of select="concat('(',$vSource,')',rdf:value)"/>
              </xsl:when>
              <xsl:otherwise><xsl:value-of select="rdf:value"/></xsl:otherwise>
            </xsl:choose>
          </transform>
        </select>
      </sf>
      <sf code="2" chopPunct="true" repeatable="false">
        <select xpath="bf:source/bf:Source/bf:code"/>
      </sf>
    </context>
  </df>

  <df tag="346" lang-xpath="rdfs:label">
    <context xpath="bf:Instance/bf:videoCharacteristic/bf:VideoFormat |
                    bf:Instance/bf:videoCharacteristic/bf:BroadcastStandard">
      <ind1 default=" "/>
      <ind2 default=" "/>
      <sf code="3" chopPunct="true" repeatable="false">
        <select xpath="bflc:appliesTo/bflc:AppliesTo/rdfs:label"/>
      </sf>
      <switch>
        <case test="local-name()='VideoFormat'">
          <sf code="a" chopPunct="true"><select xpath="rdfs:label"/></sf>
        </case>
        <case test="local-name()='BroadcastStandard'">
          <sf code="b" chopPunct="true"><select xpath="rdfs:label"/></sf>
        </case>
      </switch>
      <sf code="0">
        <select xpath="@rdf:about"/>
      </sf>
      <sf code="0">
        <select xpath="bf:identifiedBy/bf:Identifier">
          <transform>
            <xsl:variable name="vSource">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
              </xsl:call-template>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="$vSource != ''">
                <xsl:value-of select="concat('(',$vSource,')',rdf:value)"/>
              </xsl:when>
              <xsl:otherwise><xsl:value-of select="rdf:value"/></xsl:otherwise>
            </xsl:choose>
          </transform>
        </select>
      </sf>
      <sf code="2" chopPunct="true" repeatable="false">
        <select xpath="bf:source/bf:Source/bf:code"/>
      </sf>
    </context>
  </df>

  <df tag="347" lang-xpath="rdfs:label">
    <context xpath="bf:Instance/bf:digitalCharacteristic/bf:FileType |
                    bf:Instance/bf:digitalCharacteristic/bf:EncodingFormat |
                    bf:Instance/bf:digitalCharacteristic/bf:FileSize |
                    bf:Instance/bf:digitalCharacteristic/bf:Resolution |
                    bf:Instance/bf:digitalCharacteristic/bf:RegionalEncoding |
                    bf:Instance/bf:digitalCharacteristic/bf:EncodedBitrate">
      <ind1 default=" "/>
      <ind2 default=" "/>
      <sf code="3" chopPunct="true" repeatable="false">
        <select xpath="bflc:appliesTo/bflc:AppliesTo/rdfs:label"/>
      </sf>
      <switch>
        <case test="local-name()='FileType'">
          <sf code="a" chopPunct="true"><select xpath="rdfs:label"/></sf>
        </case>
        <case test="local-name()='EncodingFormat'">
          <sf code="b" chopPunct="true"><select xpath="rdfs:label"/></sf>
        </case>
        <case test="local-name()='FileSize'">
          <sf code="c" chopPunct="true"><select xpath="rdfs:label"/></sf>
        </case>
        <case test="local-name()='Resolution'">
          <sf code="d" chopPunct="true"><select xpath="rdfs:label"/></sf>
        </case>
        <case test="local-name()='RegionalEncoding'">
          <sf code="e" chopPunct="true"><select xpath="rdfs:label"/></sf>
        </case>
        <case test="local-name()='EncodedBitrate'">
          <sf code="f" chopPunct="true"><select xpath="rdfs:label"/></sf>
        </case>
      </switch>
      <sf code="0">
        <select xpath="@rdf:about"/>
      </sf>
      <sf code="0">
        <select xpath="bf:identifiedBy/bf:Identifier">
          <transform>
            <xsl:variable name="vSource">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
              </xsl:call-template>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="$vSource != ''">
                <xsl:value-of select="concat('(',$vSource,')',rdf:value)"/>
              </xsl:when>
              <xsl:otherwise><xsl:value-of select="rdf:value"/></xsl:otherwise>
            </xsl:choose>
          </transform>
        </select>
      </sf>
      <sf code="2" chopPunct="true" repeatable="false">
        <select xpath="bf:source/bf:Source/bf:code"/>
      </sf>
    </context>
  </df>

  <df tag="348" lang-xpath="rdfs:label">
    <context xpath="bf:Instance/bf:musicFormat/bf:MusicFormat">
      <ind1 default=" "/>
      <ind2 default=" "/>
      <sf code="3" chopPunct="true" repeatable="false">
        <select xpath="bflc:appliesTo/bflc:AppliesTo/rdfs:label"/>
      </sf>
      <sf code="a" chopPunct="true"><select xpath="rdfs:label"/></sf>
      <sf code="0">
        <select xpath="@rdf:about"/>
      </sf>
      <sf code="0">
        <select xpath="bf:identifiedBy/bf:Identifier">
          <transform>
            <xsl:variable name="vSource">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
              </xsl:call-template>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="$vSource != ''">
                <xsl:value-of select="concat('(',$vSource,')',rdf:value)"/>
              </xsl:when>
              <xsl:otherwise><xsl:value-of select="rdf:value"/></xsl:otherwise>
            </xsl:choose>
          </transform>
        </select>
      </sf>
      <sf code="2" chopPunct="true" repeatable="false">
        <select xpath="bf:source/bf:Source/bf:code"/>
      </sf>
    </context>
  </df>

  <df tag="351">
    <context xpath="bf:Work/bf:arrangement/bf:Arrangement">
      <ind1 default=" "/>
      <ind2 default=" "/>
      <sf code="3" chopPunct="true" repeatable="false">
        <select xpath="bflc:appliesTo/bflc:AppliesTo/rdfs:label"/>
      </sf>
      <sf code="c" chopPunct="true" repeatable="false"><select xpath="bf:hierarchicalLevel"/></sf>
      <sf code="a" chopPunct="true"><select xpath="bf:organization"/></sf>
      <sf code="b" chopPunct="true"><select xpath="bf:pattern"/></sf>
    </context>
  </df>

  <df tag="352" lang-xpath="rdfs:label">
    <context xpath="bf:Instance/bf:digitalCharacteristic/bf:CartographicDataType |
                    bf:Instance/bf:digitalCharacteristic/bf:CartographicObjectType">
      <ind1 default=" "/>
      <ind2 default=" "/>
      <switch>
        <case test="local-name()='CartographicDataType'">
          <sf code="a" chopPunct="true" repeatable="false"><select xpath="rdfs:label"/></sf>
        </case>
        <case test="local-name()='CartographicObjectType'">
          <sf code="b" chopPunct="true"><select xpath="rdfs:label"/></sf>
          <sf code="c" chopPunct="true"><select xpath="bf:count"/></sf>
        </case>
      </switch>
    </context>
  </df>

  <!-- rules for generating unformatted 362 from note in 5XX -->
  <df tag="362" lang-xpath=".">
    <context xpath="bf:Instance/bf:firstIssue">
      <ind1 default="0"/>
      <ind2 default=" "/>
      <sf code="a">
        <transform>
          <xsl:variable name="vPosition" select="position()"/>
          <xsl:variable name="vLastIssue">
            <xsl:for-each select="../bf:lastIssue">
              <xsl:if test="position() = $vPosition">
                <xsl:call-template name="tChopPunct">
                  <xsl:with-param name="pString" select="."/>
                </xsl:call-template>
              </xsl:if>
            </xsl:for-each>
          </xsl:variable>
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="concat(.,'-',$vLastIssue)"/>
          </xsl:call-template>
        </transform>
      </sf>
    </context>
  </df>

  <df tag="370" lang-xpath="rdfs:label">
    <context xpath="bf:Work/bf:originPlace/bf:Place">
      <ind1 default=" "/>
      <ind2 default=" "/>
      <switch>
        <case test="madsrdf:authoritiveLabel">
          <sf code="g" chopPunct="true">
            <transform><xsl:value-of select="madsrdf:authoritativeLabel"/></transform>
          </sf>
        </case>
        <case test="default">
          <sf code="g" chopPunct="true"><select xpath="rdfs:label"/></sf>
        </case>
      </switch>
      <sf code="0">
        <select xpath="@rdf:about"/>
      </sf>
      <sf code="0">
        <select xpath="bf:identifiedBy/bf:Identifier">
          <transform>
            <xsl:variable name="vSource">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
              </xsl:call-template>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="$vSource != ''">
                <xsl:value-of select="concat('(',$vSource,')',rdf:value)"/>
              </xsl:when>
              <xsl:otherwise><xsl:value-of select="rdf:value"/></xsl:otherwise>
            </xsl:choose>
          </transform>
        </select>
      </sf>
      <sf code="2" chopPunct="true" repeatable="false"><select xpath="bf:source/bf:Source/bf:code"/></sf>
    </context>
  </df>

  <!-- 382 -->
  <key name="kMusicMediumSourceAppliesTo" match="bf:MusicMedium[bf:source/bf:Source/bf:code and bflc:appliesTo/bflc:AppliesTo/rdfs:label]" use="bf:source/bf:Source/bf:code|bflc:appliesTo/bflc:AppliesTo/rdfs:label"/>
  <key name="kMusicMediumNoSourceAppliesTo" match="bf:MusicMedium[not(bf:source/bf:Source/bf:code) and bflc:appliesTo/bflc:AppliesTo/rdfs:label]" use="bflc:appliesTo/bflc:AppliesTo/rdfs:label"/>
  <key name="kMusicMediumSourceNoAppliesTo" match="bf:MusicMedium[bf:source/bf:Source/bf:code and not(bflc:appliesTo/bflc:AppliesTo/rdfs:label)]" use="bf:source/bf:Source/bf:code"/>
  <select xpath="bf:Work/bf:musicMedium/bf:MusicMedium[bf:source/bf:Source/bf:code and bflc:appliesTo/bflc:AppliesTo/rdfs:label and count(.|key('kMusicMediumSourceAppliesTo',bf:source/bf:Source/bf:code|bflc:appliesTo/bflc:AppliesTo/rdfs:label)[1]) = 1]">
    <df tag="382">
      <ind1 default=" "/>
      <ind2 default=" "/>
      <sf code="3" chopPunct="true" repeatable="false">
        <select xpath="bflc:appliesTo/bflc:AppliesTo/rdfs:label"/>
      </sf>
      <select xpath="key('kMusicMediumSourceAppliesTo',bf:source/bf:Source/bf:code|bflc:appliesTo/bflc:AppliesTo/rdfs:label)">
        <switch>
          <case test="starts-with(bf:instrumentalType,'doubling')">
            <sf code="d"><transform><xsl:value-of select="substring(bf:instrumentalType,9)"/></transform></sf>
          </case>
          <case test="starts-with(bf:instrumentalType,'alternate')">
            <sf code="p"><transform><xsl:value-of select="substring(bf:instrumentalType,10)"/></transform></sf>
          </case>
          <case test="starts-with(rdfs:label,'doubling')">
            <sf code="d"><transform><xsl:value-of select="substring(rdfs:label,10)"/></transform></sf>
          </case>
          <case test="starts-with(rdfs:label,'alternate')">
            <sf code="p"><transform><xsl:value-of select="substring(rdfs:label,11)"/></transform></sf>
          </case>
          <case test="substring(rdfs:label,string-length(rdfs:label) - 6) = 'soloist'">
            <sf code="b"><transform><xsl:value-of select="substring(rdfs:label,1,string-length(rdfs:label) - 8)"/></transform></sf>
          </case>
          <case test="default">
            <sf code="a" chopPunct="true"><transform><xsl:value-of select="rdfs:label"/></transform></sf>
          </case>
        </switch>
        <sf code="n" chopPunct="true"><select xpath="bf:count"/></sf>
        <sf code="v" chopPunct="true"><select xpath="bf:note/bf:Note/rdfs:label"/></sf>
        <sf code="0">
          <select xpath="@rdf:about"/>
        </sf>
        <sf code="0">
          <select xpath="bf:identifiedBy/bf:Identifier">
            <transform>
              <xsl:variable name="vSource">
                <xsl:call-template name="tChopPunct">
                  <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                </xsl:call-template>
              </xsl:variable>
              <xsl:choose>
                <xsl:when test="$vSource != ''">
                  <xsl:value-of select="concat('(',$vSource,')',rdf:value)"/>
                </xsl:when>
                <xsl:otherwise><xsl:value-of select="rdf:value"/></xsl:otherwise>
              </xsl:choose>
            </transform>
          </select>
        </sf>
      </select>
      <sf code="2" chopPunct="true" repeatable="false"><select xpath="bf:source/bf:Source/bf:code"/></sf>
    </df>
  </select>
  <select xpath="bf:Work/bf:musicMedium/bf:MusicMedium[not(bf:source/bf:Source/bf:code) and bflc:appliesTo/bflc:AppliesTo/rdfs:label and count(.|key('kMusicMediumNoSourceAppliesTo',bflc:appliesTo/bflc:AppliesTo/rdfs:label)[1]) = 1]">
    <df tag="382">
      <ind1 default=" "/>
      <ind2 default=" "/>
      <sf code="3" chopPunct="true" repeatable="false">
        <select xpath="bflc:appliesTo/bflc:AppliesTo/rdfs:label"/>
      </sf>
      <select xpath="key('kMusicMediumNoSourceAppliesTo',bflc:appliesTo/bflc:AppliesTo/rdfs:label)">
        <switch>
          <case test="starts-with(bf:instrumentalType,'doubling')">
            <sf code="d"><transform><xsl:value-of select="substring(bf:instrumentalType,9)"/></transform></sf>
          </case>
          <case test="starts-with(bf:instrumentalType,'alternate')">
            <sf code="p"><transform><xsl:value-of select="substring(bf:instrumentalType,10)"/></transform></sf>
          </case>
          <case test="starts-with(rdfs:label,'doubling')">
            <sf code="d"><transform><xsl:value-of select="substring(rdfs:label,10)"/></transform></sf>
          </case>
          <case test="starts-with(rdfs:label,'alternate')">
            <sf code="p"><transform><xsl:value-of select="substring(rdfs:label,11)"/></transform></sf>
          </case>
          <case test="substring(rdfs:label,string-length(rdfs:label) - 6) = 'soloist'">
            <sf code="b"><transform><xsl:value-of select="substring(rdfs:label,1,string-length(rdfs:label) - 8)"/></transform></sf>
          </case>
          <case test="default">
            <sf code="a" chopPunct="true"><transform><xsl:value-of select="rdfs:label"/></transform></sf>
          </case>
        </switch>
        <sf code="n" chopPunct="true"><select xpath="bf:count"/></sf>
        <sf code="v" chopPunct="true"><select xpath="bf:note/bf:Note/rdfs:label"/></sf>
        <sf code="0">
          <select xpath="@rdf:about"/>
        </sf>
        <sf code="0">
          <select xpath="bf:identifiedBy/bf:Identifier">
            <transform>
              <xsl:variable name="vSource">
                <xsl:call-template name="tChopPunct">
                  <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                </xsl:call-template>
              </xsl:variable>
              <xsl:choose>
                <xsl:when test="$vSource != ''">
                  <xsl:value-of select="concat('(',$vSource,')',rdf:value)"/>
                </xsl:when>
                <xsl:otherwise><xsl:value-of select="rdf:value"/></xsl:otherwise>
              </xsl:choose>
            </transform>
          </select>
        </sf>
      </select>
    </df>
  </select>
  <select xpath="bf:Work/bf:musicMedium/bf:MusicMedium[bf:source/bf:Source/bf:code and not(bflc:appliesTo/bflc:AppliesTo/rdfs:label) and count(.|key('kMusicMediumSourceNoAppliesTo',bf:source/bf:Source/bf:code)[1]) = 1]">
    <df tag="382">
      <ind1 default=" "/>
      <ind2 default=" "/>
      <select xpath="key('kMusicMediumSourceNoAppliesTo',bf:source/bf:Source/bf:code)">
        <switch>
          <case test="starts-with(bf:instrumentalType,'doubling')">
            <sf code="d"><transform><xsl:value-of select="substring(bf:instrumentalType,9)"/></transform></sf>
          </case>
          <case test="starts-with(bf:instrumentalType,'alternate')">
            <sf code="p"><transform><xsl:value-of select="substring(bf:instrumentalType,10)"/></transform></sf>
          </case>
          <case test="starts-with(rdfs:label,'doubling')">
            <sf code="d"><transform><xsl:value-of select="substring(rdfs:label,10)"/></transform></sf>
          </case>
          <case test="starts-with(rdfs:label,'alternate')">
            <sf code="p"><transform><xsl:value-of select="substring(rdfs:label,11)"/></transform></sf>
          </case>
          <case test="substring(rdfs:label,string-length(rdfs:label) - 6) = 'soloist'">
            <sf code="b"><transform><xsl:value-of select="substring(rdfs:label,1,string-length(rdfs:label) - 8)"/></transform></sf>
          </case>
          <case test="default">
            <sf code="a" chopPunct="true"><transform><xsl:value-of select="rdfs:label"/></transform></sf>
          </case>
        </switch>
        <sf code="n" chopPunct="true"><select xpath="bf:count"/></sf>
        <sf code="v" chopPunct="true"><select xpath="bf:note/bf:Note/rdfs:label"/></sf>
        <sf code="0">
          <select xpath="@rdf:about"/>
        </sf>
        <sf code="0">
          <select xpath="bf:identifiedBy/bf:Identifier">
            <transform>
              <xsl:variable name="vSource">
                <xsl:call-template name="tChopPunct">
                  <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                </xsl:call-template>
              </xsl:variable>
              <xsl:choose>
                <xsl:when test="$vSource != ''">
                  <xsl:value-of select="concat('(',$vSource,')',rdf:value)"/>
                </xsl:when>
                <xsl:otherwise><xsl:value-of select="rdf:value"/></xsl:otherwise>
              </xsl:choose>
            </transform>
          </select>
        </sf>
      </select>
      <sf code="2" chopPunct="true" repeatable="false"><select xpath="bf:source/bf:Source/bf:code"/></sf>
    </df>
  </select>
  <switch>
    <case test="bf:Work/bf:musicMedium/bf:MusicMedium[not(bf:source/bf:Source/bf:code) and not(bflc:appliesTo/bflc:AppliesTo/rdfs:label)]">
      <df tag="382">
        <ind1 default=" "/>
        <ind2 default=" "/>
        <select xpath="bf:Work/bf:musicMedium/bf:MusicMedium[not(bf:source/bf:Source/bf:code) and not(bflc:appliesTo/bflc:AppliesTo/rdfs:label)]">
          <switch>
            <case test="starts-with(bf:instrumentalType,'doubling')">
              <sf code="d"><transform><xsl:value-of select="substring(bf:instrumentalType,9)"/></transform></sf>
            </case>
            <case test="starts-with(bf:instrumentalType,'alternate')">
              <sf code="p"><transform><xsl:value-of select="substring(bf:instrumentalType,10)"/></transform></sf>
            </case>
            <case test="starts-with(rdfs:label,'doubling')">
              <sf code="d"><transform><xsl:value-of select="substring(rdfs:label,10)"/></transform></sf>
            </case>
            <case test="starts-with(rdfs:label,'alternate')">
              <sf code="p"><transform><xsl:value-of select="substring(rdfs:label,11)"/></transform></sf>
            </case>
            <case test="substring(rdfs:label,string-length(rdfs:label) - 6) = 'soloist'">
              <sf code="b"><transform><xsl:value-of select="substring(rdfs:label,1,string-length(rdfs:label) - 8)"/></transform></sf>
            </case>
            <case test="default">
              <sf code="a" chopPunct="true"><transform><xsl:value-of select="rdfs:label"/></transform></sf>
            </case>
          </switch>
          <sf code="n" chopPunct="true"><select xpath="bf:count"/></sf>
          <sf code="v" chopPunct="true"><select xpath="bf:note/bf:Note/rdfs:label"/></sf>
          <sf code="0">
            <select xpath="@rdf:about"/>
          </sf>
          <sf code="0">
            <select xpath="bf:identifiedBy/bf:Identifier">
              <transform>
                <xsl:variable name="vSource">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                  </xsl:call-template>
                </xsl:variable>
                <xsl:choose>
                  <xsl:when test="$vSource != ''">
                    <xsl:value-of select="concat('(',$vSource,')',rdf:value)"/>
                  </xsl:when>
                  <xsl:otherwise><xsl:value-of select="rdf:value"/></xsl:otherwise>
                </xsl:choose>
              </transform>
            </select>
          </sf>
        </select>
      </df>
    </case>
  </switch>

  <!-- 383 -->
  <switch>
    <case test="bf:Work/bf:musicSerialNumber or
                bf:Work/bf:musicOpusNumber or
                bf:Work/bf:musicThematicNumber">
      <df tag="383">
        <ind1 default = " "/>
        <ind2 default = " "/>
        <select xpath="bf:Work/bf:musicSerialNumber |
                       bf:Work/bf:musicOpusNumber |
                       bf:Work/bf:musicThematicNumber">
          <switch>
            <case test="local-name() = 'musicSerialNumber'">
              <sf code="a" chopPunct="true"><select xpath="."/></sf>
            </case>
            <case test="local-name() = 'musicOpusNumber'">
              <sf code="b" chopPunct="true"><select xpath="."/></sf>
            </case>
            <case test="local-name() = 'musicThematicNumber'">
              <sf code="c" chopPunct="true"><select xpath="."/></sf>
            </case>
          </switch>
        </select>
      </df>
    </case>
  </switch>

  <df tag="384" lang-xpath=".">
    <context xpath="bf:Work/bf:musicKey">
      <ind1 default = " "/>
      <ind2 default = " "/>
      <sf code="a" chopPunct="true"><select xpath="."/></sf>
    </context>
  </df>

  <!-- 385 and 521 -->
  <select xpath="bf:Work/bf:intendedAudience">
    <var name="vSourceUri">
      <switch>
        <case test="*/bf:source/@rdf:resource"><transform><xsl:value-of select="*/bf:source/@rdf:resource"/></transform></case>
        <case test="*/bf:source/bf:Source/@rdf:about"><transform><xsl:value-of select="*/bf:source/bf:Source/@rdf:about"/></transform></case>
      </switch>
    </var>
    <switch>
      <case test="@rdf:resource or bf:IntendedAudience[@rdf:about or bflc:demographicGroup or bf:source]">
        <df tag="385" lang-xpath="bf:IntendedAudience/rdfs:label">
          <ind1 default = " "/>
          <ind2 default = " "/>
          <sf code="3" chopPunct="true" repeatable="false">
            <select xpath="bf:IntendedAudience/bflc:appliesTo/bflc:AppliesTo/rdfs:label"/>
          </sf>
          <sf code="m" chopPunct="true" repeatable="false">
            <select xpath="bf:IntendedAudience/bflc:demographicGroup/bflc:DemographicGroup[not(@rdf:about)]/rdfs:label"/>
          </sf>
          <sf code="n" chopPunct="true" repeatable="false">
            <select xpath="bf:IntendedAudience/bflc:demographicGroup[@rdf:resource or */@rdf:about]">
              <var name="vDGUri">
                <switch>
                  <case test="@rdf:resource"><transform><xsl:value-of select="@rdf:resource"/></transform></case>
                  <case test="*/@rdf:about"><transform><xsl:value-of select="*/@rdf:resource"/></transform></case>
                </switch>
              </var>
              <switch>
                <case test="*/rdfs:label"><transform><xsl:value-of select="*/rdfs:label"/></transform></case>
                <case test="contains($vDGUri,'id.loc.gov')">
                  <transform>
                    <xsl:call-template name="tUriCode">
                      <xsl:with-param name="pUri" select="$vDGUri"/>
                    </xsl:call-template>
                  </transform>
                </case>
                <case test="default"><transform><xsl:value-of select="."/></transform></case>
              </switch>
            </select>
          </sf>
          <sf code="a" chopPunct="true">
            <select xpath="bf:IntendedAudience/rdfs:label"/>
          </sf>
          <switch>
            <case test="*/bf:source/bf:Source/*[local-name()='code']">
              <sf code="2"><transform><xsl:value-of select="*/bf:source/bf:Source/*[local-name()='code'][1]"/></transform></sf>
            </case>
            <case test="$vSourceUri != ''">
              <sf code="2">
                <switch>
                  <case test="contains($vSourceUri,'id.loc.gov')">
                    <transform>
                      <xsl:call-template name="tUriCode">
                        <xsl:with-param name="pUri" select="$vSourceUri"/>
                      </xsl:call-template>
                    </transform>
                  </case>
                  <case test="default"><transform><xsl:value-of select="$vSourceUri"/></transform></case>
                </switch>
              </sf>
            </case>
          </switch>
          <sf code="0">
            <select xpath="@rdf:resource|bf:IntendedAudience/@rdf:about"/>
          </sf>
        </df>
      </case>
      <case test="default">
        <df tag="521" lang-xpath="bf:IntendedAudience/rdfs:label">
          <ind1 default = " ">
            <switch>
              <case test="bf:IntendedAudience/bf:note/bf:Note/rdfs:label = 'reading grade level'">0</case>
              <case test="bf:IntendedAudience/bf:note/bf:Note/rdfs:label = 'interest age level'">1</case>
              <case test="bf:IntendedAudience/bf:note/bf:Note/rdfs:label = 'interest grade level'">2</case>
            </switch>
          </ind1>
          <ind2 default = " "/>
          <sf code="3" chopPunct="true" repeatable="false">
            <select xpath="bf:IntendedAudience/bflc:appliesTo/bflc:AppliesTo/rdfs:label"/>
          </sf>
          <sf code="a" chopPunct="true">
            <select xpath="bf:IntendedAudience/rdfs:label"/>
          </sf>
        </df>
      </case>
    </switch>
  </select>

  <df tag="386" lang-xpath="bflc:CreatorCharacteristic/rdfs:label">
    <context xpath="bf:Work/bflc:creatorCharacteristic">
      <var name="vSourceUri">
        <switch>
          <case test="*/bf:source/@rdf:resource"><transform><xsl:value-of select="*/bf:source/@rdf:resource"/></transform></case>
          <case test="*/bf:source/bf:Source/@rdf:about"><transform><xsl:value-of select="*/bf:source/bf:Source/@rdf:about"/></transform></case>
        </switch>
      </var>
      <ind1 default = " "/>
      <ind2 default = " "/>
      <sf code="3" chopPunct="true" repeatable="false">
        <select xpath="bflc:CreatorCharacteristic/bflc:appliesTo/bflc:AppliesTo/rdfs:label"/>
      </sf>
      <sf code="m" chopPunct="true" repeatable="false">
        <select xpath="bflc:CreatorCharacteristic/bflc:demographicGroup/bflc:DemographicGroup[not(@rdf:about)]/rdfs:label"/>
      </sf>
      <sf code="n" chopPunct="true" repeatable="false">
        <select xpath="bflc:CreatorCharacteristic/bflc:demographicGroup[@rdf:resource or */@rdf:about]">
          <var name="vDGUri">
            <switch>
              <case test="@rdf:resource"><transform><xsl:value-of select="@rdf:resource"/></transform></case>
              <case test="*/@rdf:about"><transform><xsl:value-of select="*/@rdf:resource"/></transform></case>
            </switch>
          </var>
          <switch>
            <case test="*/rdfs:label"><transform><xsl:value-of select="*/rdfs:label"/></transform></case>
            <case test="contains($vDGUri,'id.loc.gov')">
              <transform>
                <xsl:call-template name="tUriCode">
                  <xsl:with-param name="pUri" select="$vDGUri"/>
                </xsl:call-template>
              </transform>
            </case>
            <case test="default"><transform><xsl:value-of select="."/></transform></case>
          </switch>
        </select>
      </sf>
      <sf code="a" chopPunct="true">
        <select xpath="bflc:CreatorCharacteristic/rdfs:label"/>
      </sf>
      <switch>
        <case test="*/bf:source/bf:Source/*[local-name()='code']">
          <sf code="2"><transform><xsl:value-of select="*/bf:source/bf:Source/*[local-name()='code'][1]"/></transform></sf>
        </case>
        <case test="$vSourceUri != ''">
          <sf code="2">
            <switch>
              <case test="contains($vSourceUri,'id.loc.gov')">
                <transform>
                  <xsl:call-template name="tUriCode">
                    <xsl:with-param name="pUri" select="$vSourceUri"/>
                  </xsl:call-template>
                </transform>
              </case>
              <case test="default"><transform><xsl:value-of select="$vSourceUri"/></transform></case>
            </switch>
          </sf>
        </case>
      </switch>
      <sf code="0">
        <select xpath="@rdf:resource|bflc:CreatorCharacteristic/@rdf:about"/>
      </sf>
    </context>
  </df>

</rules>
